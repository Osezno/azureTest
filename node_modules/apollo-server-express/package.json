{
  "_args": [
    [
      {
        "raw": "apollo-server-express@^2.14.2",
        "scope": null,
        "escapedName": "apollo-server-express",
        "name": "apollo-server-express",
        "rawSpec": "^2.14.2",
        "spec": ">=2.14.2 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\jose\\Desktop\\Boilerplates\\graphApi\\node_modules\\apollo-server"
    ]
  ],
  "_from": "apollo-server-express@^2.14.2",
  "_hasShrinkwrap": false,
  "_id": "apollo-server-express@2.14.2",
  "_location": "/apollo-server-express",
  "_nodeVersion": "10.21.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/apollo-server-express_2.14.2_1591291465291_0.6698804205269433"
  },
  "_npmUser": {
    "name": "apollo-bot",
    "email": "npm@apollographql.com"
  },
  "_npmVersion": "lerna/3.22.0/node@v10.21.0+x64 (linux)",
  "_phantomChildren": {
    "@types/body-parser": "1.19.0",
    "@types/express-serve-static-core": "4.17.7",
    "@types/qs": "6.9.3",
    "@types/serve-static": "1.13.4"
  },
  "_requested": {
    "raw": "apollo-server-express@^2.14.2",
    "scope": null,
    "escapedName": "apollo-server-express",
    "name": "apollo-server-express",
    "rawSpec": "^2.14.2",
    "spec": ">=2.14.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/apollo-server"
  ],
  "_resolved": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.14.2.tgz",
  "_shasum": "662dfeb9c794c1eca59dd93e57e74487a8195ae6",
  "_shrinkwrap": null,
  "_spec": "apollo-server-express@^2.14.2",
  "_where": "C:\\Users\\jose\\Desktop\\Boilerplates\\graphApi\\node_modules\\apollo-server",
  "author": {
    "name": "opensource@apollographql.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-server/issues"
  },
  "dependencies": {
    "@apollographql/graphql-playground-html": "1.6.24",
    "@types/accepts": "^1.3.5",
    "@types/body-parser": "1.19.0",
    "@types/cors": "^2.8.4",
    "@types/express": "4.17.4",
    "accepts": "^1.3.5",
    "apollo-server-core": "^2.14.2",
    "apollo-server-types": "^0.5.0",
    "body-parser": "^1.18.3",
    "cors": "^2.8.4",
    "express": "^4.17.1",
    "graphql-subscriptions": "^1.0.0",
    "graphql-tools": "^4.0.0",
    "parseurl": "^1.3.2",
    "subscriptions-transport-ws": "^0.9.16",
    "type-is": "^1.6.16"
  },
  "description": "Production-ready Node.js GraphQL server for Express and Connect",
  "devDependencies": {
    "apollo-server-integration-testsuite": "^2.14.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-iYyZm0kQqkM561i9l0WC9HbJsGZJbHP9bhnWaa1Itd+yNBS2AJFp6mRR3hQacsWXUw7ewaKAracMIggvfSH5Aw==",
    "shasum": "662dfeb9c794c1eca59dd93e57e74487a8195ae6",
    "tarball": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.14.2.tgz",
    "fileCount": 28,
    "unpackedSize": 69571,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe2S5JCRA9TVsSAnZWagAAEwcP/1THlRb/JUBBG8Dn5Rex\ngpIz6MPIYzC69s4WdmRRmMjqczP5IiH1WQ9rW7nZcnAlIDoprOTPX0NbFARH\nA/ItsgTyKe2UfukFrPR9XObujZw60DE7AuDoSA6a7jX8qDBjSuFO2Z3p/foS\nuWOEGl3VjJLsEarHw1EdRxLBJ1si3HOQsZhvurqzK93SnF0TCFNeLaaa/LAa\nrQFaT7TBNdUBZ/o7rrGbX2k6ECILgpMErccB1LBHCPxFr5E4bcqg8dDGT/HL\nt1hhN5a/35j/I5zNZszYhJjwaOyOfRlhJfNqJZPSWTL4Z9fyokh44lUBvByZ\nfj5SqpKaHzW/h+2+1cXZOfSoCICINOHV/XmaPD4/IpOjswRhBDcaacSVRdAw\n8NR4DuLUJQD4Vascu5HRDW0rXnNO+nPY9Da6YhrSr45XrhPFlNO/gPDGNPbk\nxtM9my/OqEkXbOKZSjAc+Fr0dam2HCrPe7ilkw8qGVhtdGZXJg3xZPQTJ6kN\nswUhUhOq2aNQIz5LybaT3qNanx4sVar4Mm1Kv3oePmoyfJTniXfaGNlPti1g\n1RQ6I2eV8hbfvKhEmWtdcJPYv5ATxh/N4yWNyuxRkwYiBAQdRNG7MbeBOyoz\nkvmu+fz2TMJA3DUTBDr0aOHIahTHS7CorKPejmthuaSWQHzfNp0Aka19v9Oa\nIKs2\r\n=WNbM\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "a17f26bf3ee2892f5c3751713cf59920049cc73a",
  "homepage": "https://github.com/apollographql/apollo-server#readme",
  "keywords": [
    "GraphQL",
    "Apollo",
    "Server",
    "Express",
    "Connect",
    "Javascript"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "apollo-bot",
      "email": "npm@apollographql.com"
    },
    {
      "name": "evanshauser",
      "email": "evanshauser@gmail.com"
    }
  ],
  "name": "apollo-server-express",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0"
  },
  "readme": "[![npm version](https://badge.fury.io/js/apollo-server-express.svg)](https://badge.fury.io/js/apollo-server-express) [![Build Status](https://circleci.com/gh/apollographql/apollo-server.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-server) [![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/apollo)\n\n\nThis is the Express and Connect integration of GraphQL Server. Apollo Server is a community-maintained open-source GraphQL server that works with many Node.js HTTP server frameworks. [Read the docs](https://www.apollographql.com/docs/apollo-server/). [Read the CHANGELOG.](https://github.com/apollographql/apollo-server/blob/master/CHANGELOG.md)\n\n```shell\nnpm install apollo-server-express\n```\n\n## Express\n\n```js\nconst express = require('express');\nconst { ApolloServer, gql } = require('apollo-server-express');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = express();\nserver.applyMiddleware({ app });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n## Connect\n\n```js\nconst connect = require('connect');\nconst { ApolloServer, gql } = require('apollo-server-express');\nconst query = require('qs-middleware');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = connect();\nconst path = '/graphql';\n\napp.use(query());\nserver.applyMiddleware({ app, path });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n> Note: `qs-middleware` is only required if running outside of Meteor\n\n## Principles\n\nGraphQL Server is built with the following principles in mind:\n\n* **By the community, for the community**: GraphQL Server's development is driven by the needs of developers\n* **Simplicity**: by keeping things simple, GraphQL Server is easier to use, easier to contribute to, and more secure\n* **Performance**: GraphQL Server is well-tested and production-ready - no modifications needed\n\nAnyone is welcome to contribute to GraphQL Server, just read [CONTRIBUTING.md](https://github.com/apollographql/apollo-server/blob/master/CONTRIBUTING.md), take a look at the [roadmap](https://github.com/apollographql/apollo-server/blob/master/ROADMAP.md) and make your first PR!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/apollographql/apollo-server/tree/master/packages/apollo-server-express"
  },
  "types": "dist/index.d.ts",
  "version": "2.14.2"
}
